<?xml version="1.0" encoding="iso-8859-1"?> 

<!-- $Id$ -->

<project name="arcusx-chrono" default="build">

  <!-- =================================================================== -->
  <!-- Initialize what other targets rely on (only once).                  -->
  <!-- =================================================================== -->
	<target name="__init" unless="build.initialized">
		
		<property name="build.initialized" value="done"/>

		<!-- project -->
		<property name="src.dir" location="${basedir}/src"/>
		<property name="doc.dir" location="${basedir}/doc"/>
		<property name="tests.dir" location="${basedir}/tests"/>
		<property name="resources.dir" location="${basedir}/resources"/>
		<property name="lib.dir" location="${basedir}/lib"/>

		<!-- build -->
		<property name="build.version" value="1.0"/>
		<property name="build.dir" location="${basedir}/.build"/>
		<property name="build.dist.dir" location="${build.dir}/dist"/>
		<property name="build.doc.dir" location="${build.dist.dir}/doc"/>
		<property name="build.javadoc.dir" location="${build.doc.dir}/api"/>
		<property name="build.classes.dir" location="${build.dir}/classes"/>
		
		<!-- prepare build structure -->
		<mkdir dir="${build.dir}"/>
		<delete dir="${build.classes.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
		<delete dir="${build.dist.dir}"/>
		<mkdir dir="${build.dist.dir}"/>
		<mkdir dir="${build.doc.dir}"/>
		<mkdir dir="${build.javadoc.dir}"/>
		
		<!-- version tag props -->
		<tstamp />
		<buildnumber file="${basedir}/build_seq-${build.version}"/>
		<property name="now" value="${DSTAMP}-${TSTAMP}" />
		<property name="build.file" value="VERSION-${build.version}-${build.number}" />
		<echo file="${build.classes.dir}/${build.file}">${now}</echo>
		<copy todir="${build.dist.dir}" file="${build.classes.dir}/${build.file}"/>
	</target>

	<target name="build" depends="__init">
		<!-- compile all to .build/classes -->
		<javac source="1.4"
			destdir="${build.classes.dir}"
			debug="on"
			deprecation="off"
			optimize="off"
			includes="**/*.java"
			srcdir="${src.dir}">
			<classpath>
				<fileset dir="${lib.dir}" includes="*.jar"/>
 			</classpath>
		</javac>

		<!-- jar it up -->
		<jar jarfile="${build.dist.dir}/${ant.project.name}-${build.version}.jar" compress="true">
		    <fileset dir="${build.classes.dir}" includes="**"/>
		    <fileset dir="${resources.dir}" includes="**"/>
		</jar>
	</target>

	<target name="build-all" depends="build,build-javadoc"/>

	<target name="build-dist" depends="__init,build,build-javadoc">
		<!-- filtered files -->
		<copy todir="${build.dist.dir}/doc" filtering="true">
			<fileset dir="${doc.dir}" includes="**/*.html"/>
			<filterset>
		      <filter token="version" value="${build.version}-${build.number}" />
		    </filterset>
		</copy>
		
		<!-- unfiltered files -->
		<copy todir="${build.dist.dir}/doc">
			<fileset dir="${doc.dir}" includes="**" excludes="**/*.html"/>
		</copy>

		<!-- zip up sources -->
		<zip zipfile="${build.dist.dir}/${ant.project.name}-${build.version}-src.zip" compress="true">
		    <fileset dir="${src.dir}" includes="**"/>
		    <fileset dir="${tests.dir}" includes="**"/>
		</zip>

		<!-- zip all up -->
		<zip zipfile="${build.dir}/${ant.project.name}-${build.version}.zip" compress="true">
		    <fileset dir="${build.dist.dir}" includes="**"/>
		    <fileset dir="${basedir}" includes="lib/*.jar"/>
		</zip>
	</target>

	<target name="build-javadoc" depends="__init">
		<javadoc destdir="${build.javadoc.dir}"
           author="true" source="1.4" version="true" use="true" private="´false"
           windowtitle="${ant.project.name}" defaultexcludes="yes">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
		</javadoc>
	</target>
	
</project>